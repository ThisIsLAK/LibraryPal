package com.lak.prm392.groupproject.ui.main;

import android.os.Bundle;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.work.Constraints;
import androidx.work.ExistingPeriodicWorkPolicy;
import androidx.work.PeriodicWorkRequest;
import androidx.work.WorkManager;

import com.lak.prm392.groupproject.R;
import com.lak.prm392.groupproject.worker.ReminderWorker;
import com.google.android.material.bottomnavigation.BottomNavigationView;

import java.util.concurrent.TimeUnit;

public class MainActivity extends AppCompatActivity {

    private String userRole; // student / teacher / admin
    private BottomNavigationView bottomNavigationView; // n·∫øu b·∫°n c√≥ d√πng

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // üîê L·∫•y role t·ª´ intent truy·ªÅn t·ª´ LoginActivity
        userRole = getIntent().getStringExtra("user_role");

        // üì¶ G·∫Øn logic ph√¢n quy·ªÅn (VD: toast t·∫°m th·ªùi test)
        Toast.makeText(this, "B·∫°n ƒëang ƒëƒÉng nh·∫≠p v·ªõi quy·ªÅn: " + userRole, Toast.LENGTH_SHORT).show();

        // N·∫øu b·∫°n d√πng BottomNavigationView th√¨ c√≥ th·ªÉ t√πy bi·∫øn menu ·ªü ƒë√¢y
        bottomNavigationView = findViewById(R.id.bottomNavigationView);

        if (bottomNavigationView != null) {
            if (!"admin".equals(userRole)) {
                bottomNavigationView.getMenu().removeItem(R.id.menu_admin); // ·∫©n tab Admin n·∫øu kh√¥ng ph·∫£i admin
            }
            if (!"teacher".equals(userRole)) {
                bottomNavigationView.getMenu().removeItem(R.id.menu_request); // n·∫øu c√≥ tab y√™u c·∫ßu s√°ch cho teacher
            }
        }

        // üïë Ch·∫°y ƒë·ªãnh k·ª≥ WorkManager nh·∫Øc h·∫°n tr·∫£ s√°ch (ƒë√£ c√≥ s·∫µn)
        Constraints constraints = new Constraints.Builder()
                .setRequiresBatteryNotLow(true)
                .build();

        PeriodicWorkRequest reminderWork = new PeriodicWorkRequest.Builder(
                ReminderWorker.class,
                1, TimeUnit.DAYS // ch·∫°y m·ªói ng√†y
        ).setConstraints(constraints).build();

        WorkManager.getInstance(this).enqueueUniquePeriodicWork(
                "BookReminder",
                ExistingPeriodicWorkPolicy.KEEP,
                reminderWork
        );
    }
}
